#!/bin/sh

# The aim of this script is to be able to run it once to set up a mac
# and again at any time to update

# TODO
# - Add all app store apps with mas
# - List apps requiring update and provide option to update or not

# Make this script behave more like a proper language
# set -e will cause the script to bail after a command fails
# but it ignores failures inside pipelines so...
# set -o pipefail will do the same within a pipeline
# set -u will bail out if there are unset variables
# set -x will print out each command before running it
# https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -euxo pipefail

# You will need to make sure there is a Frameworks

if test ! -d "/usr/local/Frameworks"
then
  sudo mkdir /usr/local/Frameworks
  sudo chown $(logname) /usr/local/Frameworks
fi

# Test to see if homebrew is installed, if not install it
if test ! $(which brew)
then
  echo "  Installing Homebrew"
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" > /tmp/homebrew-install.log
fi

# Update recipies
brew update

# Update installed formulae
brew upgrade

# Run brew bundle from Brewfile
brew bundle

# Clean up brew, the '-s' option clears the cache, including latest versions
brew cleanup -s

# Clean up brew cask
brew cask cleanup

# Add zsh to list of valid login shells at /etc/shells 
# tee is used so we can write to a file that is owned by root
# since using sudo at the beginning would only sudo echo
# (using sudo -s in this case failed on my setup)
# Then use chsh -s to change users shell to zsh
if ! grep -Fxq /usr/local/bin/zsh /etc/shells
then
	echo /usr/local/bin/zsh | tee -a /etc/shells > /dev/null
	chsh -s /usr/local/bin/zsh
fi

# Symlink pure.zsh and async.zsh in $fpath so pure theme has access
ln -s /usr/local/opt/zplug/repos/sindresorhus/pure/async.zsh /usr/local/share/zsh/site-functions/async
ln -s /usr/local/opt/zplug/repos/sindresorhus/pure/pure.zsh /usr/local/share/zsh/site-functions/prompt_pure_setup
